parameters:
  name: ''
  displayName: ''
  container: ''

jobs:
- job: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  pool:
    vmImage: 'ubuntu-latest'
  container:
    image: ${{ parameters.container }}
  variables:
    platform: x64
  strategy:
    matrix:
      Debug:
        configuration: debug
      Release:
        configuration: release
      DebugClang:
        configuration: debugclang
      ReleaseClang:
        configuration: releaseclang
  steps:
  - checkout: self
    submodules: recursive
  - template: azure-pipelines-steps-linkedvdk.yml
  - script: 3rdParty/udcore/bin/premake-bin/premake5 gmake2
    displayName: 'Run Premake'
  - script: make -j4 config=$(configuration)_$(platform)
    displayName: 'Build Projects'
  - script: builds/tests/vcTesting --gtest_shuffle --gtest_output=xml
    displayName: 'Run Tests'
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    condition: always()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: 'test_detail.xml'
      testRunTitle: ${{ parameters.name }}_$(platform)_$(configuration)
  - task: ArchiveFiles@2
    displayName: 'Archive Artifacts'
    condition: and(succeeded(), or(eq(variables['configuration'], 'release'), eq(variables['configuration'], 'releaseclang')))
    inputs:
      rootFolderOrFile: builds/
      includeRootFolder: false
      archiveType: 'tar'
      tarCompression: 'gz'
      archiveFile: 'builds/${{ parameters.name }}$(configuration).tar.gz'
  - publish: builds/${{ parameters.name }}$(configuration).tar.gz
    displayName: 'Publish Artifacts'
    condition: and(succeeded(), or(eq(variables['configuration'], 'release'), eq(variables['configuration'], 'releaseclang')))
    artifact: ${{ parameters.name }}$(configuration)